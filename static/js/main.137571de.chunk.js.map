{"version":3,"sources":["components/rating-controls/rating-controls.module.css","components/header/header.module.css","components/item-card/item-card.module.css","app.module.css","components/rating-stat/rating-stat.module.css","components/item-card-list/item-card-list.module.css","components/rating-stat-list/rating-stat-list.module.css","ratingStatistics.js","components/header/header.component.js","components/item-card/item-card.component.js","components/item-card-list/item-card-list.component.js","components/rating-stat/rating-stat.component.js","components/rating-stat-list/rating-stat-list.component.js","components/rating-controls/rating-controls.component.js","app.component.js","serviceWorker.js","index.js"],"names":["module","exports","statOptions","type","evaluatorFn","items","ratedItems","length","topItem","maxRating","name","rating","max","averageSatisfactionPercentage","filter","item","reduce","prev","cur","map","sum","sumOfRatings","sumOfRatingMax","toFixed","Header","event","user","className","styles","src","lastName","firstName","alt","email","ItemCard","isActive","onClick","ItemCardList","activeItemIndex","setActiveItemIndex","itemCardListRef","ref","index","key","RatingStat","value","RatingStatList","RatingControls","activeItem","navigatorFunctions","rateItem","min","step","onChange","e","target","next","data","factors","App","useState","setItems","useRef","useEffect","current","children","scrollIntoView","behavior","itemsClone","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.137571de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating-controls\":\"rating-controls_rating-controls__1pfaf\",\"rating-info\":\"rating-controls_rating-info__23cS4\",\"rated-item-name\":\"rating-controls_rated-item-name__YsiXO\",\"current-rating\":\"rating-controls_current-rating__1dSEL\",\"rating-range-wrapper\":\"rating-controls_rating-range-wrapper__1e1Mc\",\"rating-range-endpoints\":\"rating-controls_rating-range-endpoints__2m6Hf\",\"rating-range-endpoints-min\":\"rating-controls_rating-range-endpoints-min__zIiBX\",\"rating-range-endpoints-max\":\"rating-controls_rating-range-endpoints-max__3gnOI\",\"rating-navigation\":\"rating-controls_rating-navigation__2kG2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-header\":\"header_app-header__2noG3\",\"event-data-wrapper\":\"header_event-data-wrapper__YooyE\",\"event-name\":\"header_event-name__3XIDJ\",\"user-data-wrapper\":\"header_user-data-wrapper__wB56H\",\"user-profile-img\":\"header_user-profile-img__2a7Ov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item-card\":\"item-card_item-card__3rPTm\",\"item-name\":\"item-card_item-name__1QWX3\",\"item-rating\":\"item-card_item-rating__gKnub\",\"active\":\"item-card_active__33hzP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"app_main-container__X-tis\",\"item-card-list-wrapper\":\"app_item-card-list-wrapper__N1UAR\",\"rating-wrapper\":\"app_rating-wrapper__w4uid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating-stat\":\"rating-stat_rating-stat__2b6Vb\",\"stat-type\":\"rating-stat_stat-type__1a_Su\",\"stat-value\":\"rating-stat_stat-value__3MtG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item-card-list\":\"item-card-list_item-card-list__3j38b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating-stat-list\":\"rating-stat-list_rating-stat-list__1D_-E\"};","const statOptions = [\n  {\n    type: \"értékelt elemek\",\n    evaluatorFn: (items) => `${ratedItems(items).length}/${items.length}`,\n  },\n  {\n    type: \"top értékelés\",\n    evaluatorFn: (items) => {\n      const topItem = maxRating(items);\n      return `${topItem.name}\\n${topItem.rating}/${topItem.max}`;\n    },\n  },\n  {\n    type: \"átlagos elégedettség\",\n    evaluatorFn: (items) => `${averageSatisfactionPercentage(items)}%`,\n  },\n];\nconst ratedItems = (items) => items.filter((item) => item.rating);\nconst maxRating = (items) => ratedItems(items).reduce((prev, cur) => (prev.rating > cur.rating ? prev : cur));\nconst sumOfRatings = (items) =>\n  ratedItems(items)\n    .map((item) => item.rating)\n    .reduce((sum, cur) => sum + cur);\nconst sumOfRatingMax = (items) =>\n  ratedItems(items)\n    .map((item) => item.max)\n    .reduce((sum, cur) => sum + cur);\nconst averageSatisfactionPercentage = (items) => ((100 * sumOfRatings(items)) / sumOfRatingMax(items)).toFixed(2);\n\nexport default statOptions;\n","import React from \"react\";\nimport styles from \"./header.module.css\";\n\nconst Header = ({ event, user }) => {\n  return (\n    <div className={styles[\"app-header\"]}>\n      <div className={styles[\"event-data-wrapper\"]}>\n        <h1 className={styles[\"event-name\"]}>{event.name}</h1>\n      </div>\n      <div className={styles[\"user-data-wrapper\"]}>\n        <img\n          className={styles[\"user-profile-img\"]}\n          src={`https://api.adorable.io/avatars/32/${user.lastName + user.firstName}.png`}\n          alt={`Profile of ${user.lastName + \" \" + user.firstName}`}\n        />\n        <div>\n          <h3 className={styles[\"user-name\"]}>{user.lastName + \" \" + user.firstName}</h3>\n          <p className={styles[\"user-email\"]}>{user.email}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./item-card.module.css\";\n\nconst ItemCard = ({ item, isActive, onClick }) => {\n  return (\n    <div onClick={onClick} className={`${styles[\"item-card\"]} ${isActive ? styles[\"active\"] : \"\"}`}>\n      <h4 className={styles[\"item-name\"]}>{item.name}</h4>\n      <p className={styles[\"item-rating\"]}>{item.rating ? `${item.rating}/${item.max}` : \"Nincs értékelés\"}</p>\n    </div>\n  );\n};\n\nexport default ItemCard;\n","import React from \"react\";\nimport styles from \"./item-card-list.module.css\";\n\nimport ItemCard from \"../item-card/item-card.component\";\n\nconst ItemCardList = ({ items, activeItemIndex, setActiveItemIndex, itemCardListRef }) => {\n  return (\n    <div ref={itemCardListRef} className={styles[\"item-card-list\"]}>\n      {items.map((item, index) => (\n        <ItemCard key={index} item={item} isActive={index === activeItemIndex} onClick={() => setActiveItemIndex(index)} />\n      ))}\n    </div>\n  );\n};\n\nexport default ItemCardList;\n","import React from \"react\";\nimport styles from \"./rating-stat.module.css\";\n\nconst RatingStat = ({ type, value }) => {\n  return (\n    <div className={styles[\"rating-stat\"]}>\n      <h4 className={styles[\"stat-type\"]}>{type}</h4>\n      <p className={styles[\"stat-value\"]}>{value}</p>\n    </div>\n  );\n};\n\nexport default RatingStat;\n","import React from \"react\";\nimport styles from \"./rating-stat-list.module.css\";\n\nimport RatingStat from \"../rating-stat/rating-stat.component\";\n\nconst RatingStatList = ({ items, statOptions }) => {\n  return (\n    <div className={styles[\"rating-stat-list\"]}>\n      {statOptions.map(({ type, evaluatorFn }, index) => (\n        <RatingStat key={index} type={type} value={evaluatorFn(items)} />\n      ))}\n    </div>\n  );\n};\n\nexport default RatingStatList;\n","import React from \"react\";\nimport styles from \"./rating-controls.module.css\";\n\nconst RatingControls = ({ activeItem, navigatorFunctions, rateItem }) => {\n  const { name, min, max, step, rating } = activeItem;\n  const onRangeValueChange = (e) => rateItem(+e.target.value);\n  return (\n    <div className={styles[\"rating-controls\"]}>\n      <div className={styles[\"rating-info\"]}>\n        <h1 className={styles[\"rated-item-name\"]}>{name}</h1>\n        <span className={styles[\"current-rating\"]}>{`${rating || \"-\"}/${max}`}</span>\n      </div>\n      <div className={styles[\"rating-range-wrapper\"]}>\n        <span>\n          Értékelési lépték: <span className={styles[\"rating-range-step\"]}>{step}</span>\n        </span>\n        <input type=\"range\" className={styles[\"rating-range\"]} min={min} max={max} step={step} value={rating || min} onChange={onRangeValueChange} />\n        <div className={styles[\"rating-range-endpoints\"]}>\n          <span className={styles[\"rating-range-endpoint-min\"]}>{min}</span>\n          <span className={styles[\"rating-range-endpoint-max\"]}>{max}</span>\n        </div>\n      </div>\n      <div className={styles[\"rating-navigation\"]}>\n        <button className={styles[\"prev-rating-btn\"]} onClick={navigatorFunctions.prev}>\n          <span className=\"flip-y\">➔</span>\n        </button>\n        <button className={styles[\"next-rating-btn\"]} onClick={navigatorFunctions.next}>\n          <span>➔</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RatingControls;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styles from \"./app.module.css\";\nimport * as data from \"./mock.json\";\nimport statOptions from \"./ratingStatistics.js\";\n\nimport Header from \"./components/header/header.component\";\nimport ItemCardList from \"./components/item-card-list/item-card-list.component\";\nimport RatingStatList from \"./components/rating-stat-list/rating-stat-list.component\";\nimport RatingControls from \"./components/rating-controls/rating-controls.component\";\n\nconst response = data.response;\nconst {\n  data: { event, user, factors },\n} = response;\n\nfunction App() {\n  const [items, setItems] = useState(factors);\n  const [activeItemIndex, setActiveItemIndex] = useState(0);\n  const itemCardListRef = useRef(null);\n\n  const toPrevItem = () => setActiveItemIndex(activeItemIndex === 0 ? items.length - 1 : activeItemIndex - 1);\n  const toNextItem = () => setActiveItemIndex(activeItemIndex === items.length - 1 ? 0 : activeItemIndex + 1);\n  const rateItem = (rating) => {\n    const itemsClone = [...items];\n    itemsClone[activeItemIndex].rating = rating;\n    setItems(itemsClone);\n  };\n\n  useEffect(() => {\n    itemCardListRef.current.children[activeItemIndex].scrollIntoView({ behavior: \"smooth\" });\n  }, [activeItemIndex]);\n\n  return (\n    <div>\n      <Header user={user} event={event} />\n      <div className={styles[\"main-container\"]}>\n        <div className={styles[\"item-card-list-wrapper\"]}>\n          <ItemCardList items={items} activeItemIndex={activeItemIndex} setActiveItemIndex={setActiveItemIndex} itemCardListRef={itemCardListRef} />\n        </div>\n        <div className={styles[\"rating-wrapper\"]}>\n          <RatingStatList items={items} statOptions={statOptions} />\n          <RatingControls activeItem={items[activeItemIndex]} navigatorFunctions={{ prev: toPrevItem, next: toNextItem }} rateItem={rateItem} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app.component\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}